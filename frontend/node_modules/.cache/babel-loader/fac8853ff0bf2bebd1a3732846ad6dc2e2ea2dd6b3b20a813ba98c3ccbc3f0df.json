{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\service\\\\forms\\\\set-new-user-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewUserPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const validatePassword = () => {\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long.');\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validatePassword()) {\n      try {\n        // Здесь отправляем запрос на сервер для сброса пароля\n        const response = await API.post('password/reset/complete/', {\n          new_password: password,\n          re_new_password: confirmPassword\n        }, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.status === 200) {\n          console.log('Password set successfully!');\n          // Здесь можно реализовать переадресацию или показать сообщение об успехе\n        }\n      } catch (error) {\n        console.error('Error resetting password:', error);\n        // Обработка ошибок при сбросе пароля\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set-password\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Your New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNewUserPassword, \"phx6WSYjbA9zUgGhsNH3iJSvobs=\");\n_c = SetNewUserPassword;\nexport default SetNewUserPassword;\nvar _c;\n$RefreshReg$(_c, \"SetNewUserPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SetNewUserPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","validatePassword","length","handleSubmit","e","preventDefault","response","API","post","new_password","re_new_password","headers","Authorization","accessToken","status","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/service/forms/set-new-user-password.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SetNewUserPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const validatePassword = () => {\r\n    if (password.length < 8) {\r\n      setError('Password must be at least 8 characters long.');\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return false;\r\n    }\r\n    setError('');\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validatePassword()) {\r\n      try {\r\n        // Здесь отправляем запрос на сервер для сброса пароля\r\n        const response = await API.post('password/reset/complete/', {\r\n          new_password: password,\r\n          re_new_password: confirmPassword\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`\r\n          }\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          console.log('Password set successfully!');\r\n          // Здесь можно реализовать переадресацию или показать сообщение об успехе\r\n        }\r\n      } catch (error) {\r\n        console.error('Error resetting password:', error);\r\n        // Обработка ошибок при сбросе пароля\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"set-password\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Set Your New Password</h2>\r\n        \r\n        <div>\r\n          <label>Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label>Confirm Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <button type=\"submit\">Set Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetNewUserPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}