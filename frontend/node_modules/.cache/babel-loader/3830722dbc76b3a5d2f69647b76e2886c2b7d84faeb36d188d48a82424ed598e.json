{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\components\\\\AddAssignment.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { EditorState, ContentState } from 'draft-js';\nimport API from '../service/axios';\nimport AssignmentBlock from '../service/assignment-blocks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport \"../css/assignments.css\";\nimport ImageSelector from '../service/image-selector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getPlainText = editorState => {\n  return editorState.getCurrentContent().getPlainText();\n};\nconst AddAssignment = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [type, setType] = useState('lesson');\n  const [language, setLanguage] = useState('en');\n  const [tags, setTags] = useState('');\n  const [blocks, setBlocks] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const blockInfo = blocks.map(block => {\n      if (block.type === \"text\") {\n        return {\n          type: block.type,\n          question: block.title,\n          reply: getPlainText(block.content),\n          choice_replies: []\n        };\n      } else if (block.type === \"range\") {\n        return {\n          type: block.type,\n          question: block.title,\n          start_range: block.minValue,\n          end_range: block.maxValue\n        };\n      } else {\n        return {\n          type: block.type,\n          question: block.title,\n          choice_replies: block.choices.map(choice => ({\n            reply: choice\n          }))\n        };\n      }\n    });\n    const requestData = {\n      blocks: blockInfo,\n      title: title,\n      text: description,\n      assignment_type: type,\n      tags: \"ffasd\",\n      language: language,\n      image_url: (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.urls.full) || \"https://images.unsplash.com/photo-1641531316051-30d6824c6460?crop=entropy&cs=srgb&fm=jpg&ixid=M3w1MzE0ODh8MHwxfHNlYXJjaHwxfHxsZW9uaWR8ZW58MHx8fHwxNzAwODE4Nzc5fDA&ixlib=rb-4.0.3&q=85\"\n    };\n    try {\n      const response = await API.post('assignment/', requestData);\n      console.log(requestData);\n      if (response.status == 201) {\n        setSuccessMessage(true);\n        setTimeout(() => {\n          navigate('/assignments');\n        }, 2000);\n      }\n      if (response.status == 400) {}\n    } catch (error) {\n      console.error(\"Error creating assignment \", error);\n    }\n  };\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n  };\n  const addBlock = type => {\n    const newBlock = {\n      id: blocks.length + 1,\n      type: type,\n      title: '',\n      content: type === 'text' ? EditorState.createEmpty() : '',\n      choices: type === 'text' ? [] : [''],\n      minValue: type == 'range' ? 1 : null,\n      maxValue: type == 'range' ? 10 : null\n    };\n    setBlocks([...blocks, newBlock]);\n  };\n  const removeBlock = blockId => {\n    const updatedBlocks = blocks.filter(block => block.id !== blockId);\n    setBlocks(updatedBlocks);\n  };\n  const updateBlock = (blockId, newContent, newChoices, newTitle, newMinValue, newMaxValue) => {\n    const updatedBlocks = blocks.map(block => {\n      if (block.id === blockId) {\n        return {\n          ...block,\n          content: newContent || block.content,\n          choices: newChoices || block.choices,\n          title: newTitle || block.title,\n          minValue: typeof newMinValue !== 'undefined' ? newMinValue : block.minValue,\n          maxValue: typeof newMaxValue !== 'undefined' ? newMaxValue : block.maxValue\n        };\n      }\n      return block;\n    });\n    setBlocks(updatedBlocks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: \"Assignment created succesfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), blocks.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-assignment-button\",\n        onClick: handleSubmit,\n        children: \"Save Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-assignment-body\",\n      children: [/*#__PURE__*/_jsxDEV(ImageSelector, {\n        onImageSelect: handleImageSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-creator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"title-input\",\n            placeholder: \"Name of form\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"title-input\",\n            placeholder: \"Give a brief description...\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: type,\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lesson\",\n                children: \"Lesson\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"exercise\",\n                children: \"Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"essay\",\n                children: \"Essay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"study\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"quiz\",\n                children: \"Quiz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"methology\",\n                children: \"Methodology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"metaphor\",\n                children: \"Metaphor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en\",\n                children: \"English\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"es\",\n                children: \"Spanish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fr\",\n                children: \"French\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ge\",\n                children: \"German\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"it\",\n                children: \"Italian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting tags-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tags,\n              onChange: e => setTags(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), blocks.map(block => /*#__PURE__*/_jsxDEV(AssignmentBlock, {\n          block: block,\n          updateBlock: updateBlock,\n          removeBlock: removeBlock\n        }, block.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-buttons-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Text Block\",\n            type: \"button\",\n            onClick: () => addBlock('text'),\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"material-symbols-outlined\",\n              children: \"text_fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 93\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Multiple Choice Block\",\n            type: \"button\",\n            onClick: () => addBlock('multiple'),\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"material-symbols-outlined\",\n              children: \"select_check_box\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 108\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Single Choice Block\",\n            type: \"button\",\n            onClick: () => addBlock('single'),\n            children: [\"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"material-symbols-outlined\",\n              children: \"radio_button_checked\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 104\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Range Question Block\",\n            type: \"button\",\n            onClick: () => addBlock('range'),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"material-icons\",\n              children: \"linear_scale\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 102\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAssignment, \"XNE5UaC9+Ty3i54XdVSpR1/wg8U=\", false, function () {\n  return [useNavigate];\n});\n_c = AddAssignment;\nconst ViewAssignment = () => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [assignmentData, setAssignmentData] = useState({\n    title: '',\n    text: '',\n    type: '',\n    language: '',\n    image_url: '',\n    blocks: []\n  });\n  const setAssignmentCredentials = data => {\n    const restoredBlocks = data.blocks ? data.blocks.map(block => {\n      if (block.type === 'text') {\n        const contentState = ContentState.createFromText(block.question);\n        return {\n          ...block,\n          content: EditorState.createWithContent(contentState)\n        };\n      }\n      return block;\n    }) : [];\n    setAssignmentData({\n      ...data,\n      blocks: restoredBlocks\n    });\n  };\n  useEffect(() => {\n    const fetchAssignmentData = async () => {\n      try {\n        const response = await API.get(`assignments/${id}/`);\n        setAssignmentCredentials(response.data);\n      } catch (error) {\n        console.error(\"Error fetching assignment data\", error);\n        navigate('/assignments'); // Redirect if error\n      }\n    };\n\n    fetchAssignmentData();\n  }, [id, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: assignmentData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: assignmentData.image_url,\n        alt: \"Assignment\",\n        className: \"assignment-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignment-view-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 14\n          }, this), \" \", assignmentData.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 14\n          }, this), assignmentData.author_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 14\n          }, this), \" \", assignmentData.assignment_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Language: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 14\n          }, this), \" \", assignmentData.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assignment-blocks\",\n          children: assignmentData.blocks.length > 0 && assignmentData.blocks.map((block, index) => /*#__PURE__*/_jsxDEV(AssignmentBlock, {\n            block: block,\n            readOnly: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n};\n_s2(ViewAssignment, \"d9yJNp7teyMgTxaXiiHoG0zctLE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c2 = ViewAssignment;\nexport { AddAssignment, ViewAssignment };\nvar _c, _c2;\n$RefreshReg$(_c, \"AddAssignment\");\n$RefreshReg$(_c2, \"ViewAssignment\");","map":{"version":3,"names":["React","useState","useEffect","EditorState","ContentState","API","AssignmentBlock","useNavigate","useParams","ImageSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","getPlainText","editorState","getCurrentContent","AddAssignment","_s","title","setTitle","description","setDescription","type","setType","language","setLanguage","tags","setTags","blocks","setBlocks","selectedImage","setSelectedImage","successMessage","setSuccessMessage","navigate","handleSubmit","e","preventDefault","blockInfo","map","block","question","reply","content","choice_replies","start_range","minValue","end_range","maxValue","choices","choice","requestData","text","assignment_type","image_url","urls","full","response","post","console","log","status","setTimeout","error","handleImageSelect","image","addBlock","newBlock","id","length","createEmpty","removeBlock","blockId","updatedBlocks","filter","updateBlock","newContent","newChoices","newTitle","newMinValue","newMaxValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onImageSelect","onSubmit","placeholder","value","onChange","target","required","class","_c","ViewAssignment","_s2","assignmentData","setAssignmentData","setAssignmentCredentials","data","restoredBlocks","contentState","createFromText","createWithContent","fetchAssignmentData","get","src","alt","author_name","index","readOnly","_c2","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/components/AddAssignment.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { EditorState, ContentState } from 'draft-js';\r\nimport API from '../service/axios';\r\nimport AssignmentBlock from '../service/assignment-blocks';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"../css/assignments.css\"\r\nimport ImageSelector from '../service/image-selector';\r\n\r\nconst getPlainText = (editorState) => {\r\n  return editorState.getCurrentContent().getPlainText();\r\n};\r\n\r\n\r\nconst AddAssignment = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [type, setType] = useState('lesson');\r\n  const [language, setLanguage] = useState('en');\r\n  const [tags, setTags] = useState('');\r\n\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n  const [successMessage, setSuccessMessage] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const blockInfo = blocks.map(block => {\r\n    if (block.type === \"text\") {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        reply: getPlainText(block.content),\r\n        choice_replies: []\r\n      };\r\n    } else if (block.type === \"range\") {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        start_range: block.minValue,\r\n        end_range: block.maxValue\r\n      };\r\n    } else {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        choice_replies: block.choices.map(choice => ({ reply: choice }))\r\n      };\r\n    }\r\n  });\r\n\r\n\r\n  const requestData = {\r\n    blocks: blockInfo,\r\n    title: title,\r\n    text: description,\r\n    assignment_type: type,\r\n    tags: \"ffasd\",\r\n    language: language,\r\n    image_url: selectedImage?.urls.full || \"https://images.unsplash.com/photo-1641531316051-30d6824c6460?crop=entropy&cs=srgb&fm=jpg&ixid=M3w1MzE0ODh8MHwxfHNlYXJjaHwxfHxsZW9uaWR8ZW58MHx8fHwxNzAwODE4Nzc5fDA&ixlib=rb-4.0.3&q=85\"\r\n  };\r\n\r\n  try {\r\n    const response = await API.post('assignment/', requestData);\r\n    console.log(requestData)\r\n    if(response.status == 201){\r\n      setSuccessMessage(true)\r\n      setTimeout(() => {\r\n        navigate('/assignments')\r\n      }, 2000)\r\n    }\r\n    if(response.status == 400){\r\n\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating assignment \", error);\r\n  }\r\n};\r\n\r\n  const handleImageSelect = (image) => {\r\n    setSelectedImage(image);\r\n  }\r\n\r\n  const addBlock = (type) => {\r\n    const newBlock = {\r\n      id: blocks.length + 1,\r\n      type: type,\r\n      title: '', \r\n      content: type === 'text' ? EditorState.createEmpty() : '',\r\n      choices: type === 'text' ? [] : [''],\r\n      minValue: type == 'range' ? 1 : null,\r\n      maxValue: type == 'range' ? 10 : null,\r\n    };\r\n    setBlocks([...blocks, newBlock]);\r\n  };\r\n\r\n  const removeBlock = (blockId) => {\r\n    const updatedBlocks = blocks.filter(block => block.id !== blockId);\r\n    setBlocks(updatedBlocks);\r\n  };\r\n\r\n  const updateBlock = (blockId, newContent, newChoices, newTitle, newMinValue, newMaxValue) => {\r\n    const updatedBlocks = blocks.map((block) => {\r\n      if (block.id === blockId) {\r\n        return {\r\n          ...block,\r\n          content: newContent || block.content,\r\n          choices: newChoices || block.choices,\r\n          title: newTitle || block.title,\r\n          minValue: typeof newMinValue !== 'undefined' ? newMinValue : block.minValue,\r\n          maxValue: typeof newMaxValue !== 'undefined' ? newMaxValue : block.maxValue\r\n        };\r\n      }\r\n      return block;\r\n    });\r\n    setBlocks(updatedBlocks);\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className='assignments-page'>\r\n      {successMessage && <div className='success-message'>Assignment created succesfully</div>}\r\n      <header>\r\n        <h1>Add Assignment</h1>\r\n        {blocks.length > 0 ? <button className='add-assignment-button' onClick={handleSubmit}>Save Assignment</button> : <></>}\r\n      </header>\r\n      <div className='add-assignment-body'>\r\n        <ImageSelector onImageSelect={handleImageSelect}/>\r\n        <form onSubmit={handleSubmit} className=\"form-creator\">\r\n          <div className='form-title'>\r\n            <input\r\n              type='text'\r\n              className=\"title-input\" \r\n              placeholder='Name of form'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type='text'\r\n              className=\"title-input\" \r\n              placeholder=\"Give a brief description...\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-settings'>\r\n              <div className=\"form-setting\">\r\n                <label>Type</label>\r\n                <select value={type} onChange={(e) => setType(e.target.value)}>\r\n                  <option value=\"lesson\">Lesson</option>\r\n                  <option value=\"exercise\">Exercise</option>\r\n                  <option value=\"essay\">Essay</option>\r\n                  <option value=\"study\">Study</option>\r\n                  <option value=\"quiz\">Quiz</option>\r\n                  <option value=\"methology\">Methodology</option>\r\n                  <option value=\"metaphor\">Metaphor</option>\r\n                </select>\r\n          </div>\r\n          <div className=\"form-setting\">\r\n            <label>Language</label>\r\n            <select value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n              <option value=\"en\">English</option>\r\n              <option value=\"es\">Spanish</option>\r\n              <option value=\"fr\">French</option>\r\n              <option value=\"ge\">German</option>\r\n              <option value=\"it\">Italian</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-setting tags-setting\">\r\n            <label>Tags</label>\r\n            <input\r\n              type=\"text\"\r\n              value={tags}\r\n              onChange={(e) => setTags(e.target.value)}\r\n            />\r\n          </div>\r\n        </div> \r\n          {blocks.map(block => (\r\n            <AssignmentBlock\r\n              key={block.id}\r\n              block={block}\r\n              updateBlock={updateBlock}\r\n              removeBlock={removeBlock}\r\n            />\r\n          ))}\r\n        </form>\r\n        <div className='block-buttons-container'>\r\n          <div className='block-buttons'>\r\n            <button title=\"Add Text Block\" type=\"button\" onClick={() => addBlock('text')}>  <span class=\"material-symbols-outlined\">text_fields</span></button>\r\n            <button title=\"Add Multiple Choice Block\" type=\"button\" onClick={() => addBlock('multiple')}>  <span class=\"material-symbols-outlined\">select_check_box</span> </button>\r\n            <button title=\"Add Single Choice Block\" type=\"button\" onClick={() => addBlock('single')}>  <span class=\"material-symbols-outlined\">radio_button_checked</span> </button>\r\n            <button title='Add Range Question Block' type='button' onClick={() => addBlock('range')}><span class=\"material-icons\">linear_scale</span></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nconst ViewAssignment = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [assignmentData, setAssignmentData] = useState({\r\n    title: '',\r\n    text: '',\r\n    type: '',\r\n    language: '',\r\n    image_url: '',\r\n    blocks: []\r\n  });\r\n\r\n  const setAssignmentCredentials = (data) => {\r\n    const restoredBlocks = data.blocks ? data.blocks.map(block => {\r\n      if (block.type === 'text') {\r\n        const contentState = ContentState.createFromText(block.question);\r\n        return {\r\n          ...block,\r\n          content: EditorState.createWithContent(contentState),\r\n        };\r\n      }\r\n      return block;\r\n    }) : [];\r\n\r\n    setAssignmentData({\r\n      ...data,\r\n      blocks: restoredBlocks\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchAssignmentData = async () => {\r\n      try {\r\n        const response = await API.get(`assignments/${id}/`);\r\n        setAssignmentCredentials(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching assignment data\", error);\r\n        navigate('/assignments'); // Redirect if error\r\n      }\r\n    };\r\n\r\n    fetchAssignmentData();\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div className='assignments-page'>\r\n      <header>\r\n        <h1>{assignmentData.title}</h1>\r\n        <img src={assignmentData.image_url} alt=\"Assignment\" className=\"assignment-image\" />\r\n      </header>\r\n      <div className='assignment-view-body'>\r\n        <div className='assignment-details'>\r\n          <p><strong>Description:</strong> {assignmentData.text}</p>\r\n          <p><strong>Author: </strong>{assignmentData.author_name}</p>\r\n          <p><strong>Type: </strong> {assignmentData.assignment_type}</p>\r\n          <p><strong>Language: </strong> {assignmentData.language}</p>\r\n          <div className='assignment-blocks'>\r\n            {assignmentData.blocks.length > 0 &&\r\n              assignmentData.blocks.map((block, index) => (\r\n                <AssignmentBlock key={index} block={block} readOnly={true} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport {AddAssignment, ViewAssignment}\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,WAAW,EAAEC,YAAY,QAAQ,UAAU;AACpD,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AACzD,OAAO,wBAAwB;AAC/B,OAAOC,aAAa,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtD,MAAMC,YAAY,GAAIC,WAAW,IAAK;EACpC,OAAOA,WAAW,CAACC,iBAAiB,CAAC,CAAC,CAACF,YAAY,CAAC,CAAC;AACvD,CAAC;AAGD,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsB,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgC,cAAc,EAAEC,iBAAiB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMkC,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAE9B,MAAM6B,YAAY,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAG,CAACC,KAAK,IAAI;MACpC,IAAIA,KAAK,CAAClB,IAAI,KAAK,MAAM,EAAE;QACzB,OAAO;UACLA,IAAI,EAAEkB,KAAK,CAAClB,IAAI;UAChBmB,QAAQ,EAAED,KAAK,CAACtB,KAAK;UACrBwB,KAAK,EAAE7B,YAAY,CAAC2B,KAAK,CAACG,OAAO,CAAC;UAClCC,cAAc,EAAE;QAClB,CAAC;MACH,CAAC,MAAM,IAAIJ,KAAK,CAAClB,IAAI,KAAK,OAAO,EAAE;QACjC,OAAO;UACLA,IAAI,EAAEkB,KAAK,CAAClB,IAAI;UAChBmB,QAAQ,EAAED,KAAK,CAACtB,KAAK;UACrB2B,WAAW,EAAEL,KAAK,CAACM,QAAQ;UAC3BC,SAAS,EAAEP,KAAK,CAACQ;QACnB,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL1B,IAAI,EAAEkB,KAAK,CAAClB,IAAI;UAChBmB,QAAQ,EAAED,KAAK,CAACtB,KAAK;UACrB0B,cAAc,EAAEJ,KAAK,CAACS,OAAO,CAACV,GAAG,CAACW,MAAM,KAAK;YAAER,KAAK,EAAEQ;UAAO,CAAC,CAAC;QACjE,CAAC;MACH;IACF,CAAC,CAAC;IAGF,MAAMC,WAAW,GAAG;MAClBvB,MAAM,EAAEU,SAAS;MACjBpB,KAAK,EAAEA,KAAK;MACZkC,IAAI,EAAEhC,WAAW;MACjBiC,eAAe,EAAE/B,IAAI;MACrBI,IAAI,EAAE,OAAO;MACbF,QAAQ,EAAEA,QAAQ;MAClB8B,SAAS,EAAE,CAAAxB,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEyB,IAAI,CAACC,IAAI,KAAI;IACzC,CAAC;IAED,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrD,GAAG,CAACsD,IAAI,CAAC,aAAa,EAAEP,WAAW,CAAC;MAC3DQ,OAAO,CAACC,GAAG,CAACT,WAAW,CAAC;MACxB,IAAGM,QAAQ,CAACI,MAAM,IAAI,GAAG,EAAC;QACxB5B,iBAAiB,CAAC,IAAI,CAAC;QACvB6B,UAAU,CAAC,MAAM;UACf5B,QAAQ,CAAC,cAAc,CAAC;QAC1B,CAAC,EAAE,IAAI,CAAC;MACV;MACA,IAAGuB,QAAQ,CAACI,MAAM,IAAI,GAAG,EAAC,CAE1B;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAEC,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnClC,gBAAgB,CAACkC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMC,QAAQ,GAAI5C,IAAI,IAAK;IACzB,MAAM6C,QAAQ,GAAG;MACfC,EAAE,EAAExC,MAAM,CAACyC,MAAM,GAAG,CAAC;MACrB/C,IAAI,EAAEA,IAAI;MACVJ,KAAK,EAAE,EAAE;MACTyB,OAAO,EAAErB,IAAI,KAAK,MAAM,GAAGpB,WAAW,CAACoE,WAAW,CAAC,CAAC,GAAG,EAAE;MACzDrB,OAAO,EAAE3B,IAAI,KAAK,MAAM,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;MACpCwB,QAAQ,EAAExB,IAAI,IAAI,OAAO,GAAG,CAAC,GAAG,IAAI;MACpC0B,QAAQ,EAAE1B,IAAI,IAAI,OAAO,GAAG,EAAE,GAAG;IACnC,CAAC;IACDO,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEuC,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,MAAMI,WAAW,GAAIC,OAAO,IAAK;IAC/B,MAAMC,aAAa,GAAG7C,MAAM,CAAC8C,MAAM,CAAClC,KAAK,IAAIA,KAAK,CAAC4B,EAAE,KAAKI,OAAO,CAAC;IAClE3C,SAAS,CAAC4C,aAAa,CAAC;EAC1B,CAAC;EAED,MAAME,WAAW,GAAGA,CAACH,OAAO,EAAEI,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,WAAW,KAAK;IAC3F,MAAMP,aAAa,GAAG7C,MAAM,CAACW,GAAG,CAAEC,KAAK,IAAK;MAC1C,IAAIA,KAAK,CAAC4B,EAAE,KAAKI,OAAO,EAAE;QACxB,OAAO;UACL,GAAGhC,KAAK;UACRG,OAAO,EAAEiC,UAAU,IAAIpC,KAAK,CAACG,OAAO;UACpCM,OAAO,EAAE4B,UAAU,IAAIrC,KAAK,CAACS,OAAO;UACpC/B,KAAK,EAAE4D,QAAQ,IAAItC,KAAK,CAACtB,KAAK;UAC9B4B,QAAQ,EAAE,OAAOiC,WAAW,KAAK,WAAW,GAAGA,WAAW,GAAGvC,KAAK,CAACM,QAAQ;UAC3EE,QAAQ,EAAE,OAAOgC,WAAW,KAAK,WAAW,GAAGA,WAAW,GAAGxC,KAAK,CAACQ;QACrE,CAAC;MACH;MACA,OAAOR,KAAK;IACd,CAAC,CAAC;IACFX,SAAS,CAAC4C,aAAa,CAAC;EAC1B,CAAC;EAID,oBACE/D,OAAA;IAAKuE,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAC9BlD,cAAc,iBAAItB,OAAA;MAAKuE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxF5E,OAAA;MAAAwE,QAAA,gBACExE,OAAA;QAAAwE,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtB1D,MAAM,CAACyC,MAAM,GAAG,CAAC,gBAAG3D,OAAA;QAAQuE,SAAS,EAAC,uBAAuB;QAACM,OAAO,EAAEpD,YAAa;QAAA+C,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAAG5E,OAAA,CAAAE,SAAA,mBAAI,CAAC;IAAA;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChH,CAAC,eACT5E,OAAA;MAAKuE,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCxE,OAAA,CAACF,aAAa;QAACgF,aAAa,EAAExB;MAAkB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAClD5E,OAAA;QAAM+E,QAAQ,EAAEtD,YAAa;QAAC8C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACpDxE,OAAA;UAAKuE,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACzBxE,OAAA;YACEY,IAAI,EAAC,MAAM;YACX2D,SAAS,EAAC,aAAa;YACvBS,WAAW,EAAC,cAAc;YAC1BC,KAAK,EAAEzE,KAAM;YACb0E,QAAQ,EAAGxD,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;YAC1CG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACF5E,OAAA;YACEY,IAAI,EAAC,MAAM;YACX2D,SAAS,EAAC,aAAa;YACvBS,WAAW,EAAC,6BAA6B;YACzCC,KAAK,EAAEvE,WAAY;YACnBwE,QAAQ,EAAGxD,CAAC,IAAKf,cAAc,CAACe,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;YAChDG,QAAQ;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5E,OAAA;UAAKuE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC1BxE,OAAA;YAAKuE,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BxE,OAAA;cAAAwE,QAAA,EAAO;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnB5E,OAAA;cAAQiF,KAAK,EAAErE,IAAK;cAACsE,QAAQ,EAAGxD,CAAC,IAAKb,OAAO,CAACa,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;cAAAT,QAAA,gBAC5DxE,OAAA;gBAAQiF,KAAK,EAAC,QAAQ;gBAAAT,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtC5E,OAAA;gBAAQiF,KAAK,EAAC,UAAU;gBAAAT,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C5E,OAAA;gBAAQiF,KAAK,EAAC,OAAO;gBAAAT,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpC5E,OAAA;gBAAQiF,KAAK,EAAC,OAAO;gBAAAT,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpC5E,OAAA;gBAAQiF,KAAK,EAAC,MAAM;gBAAAT,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC5E,OAAA;gBAAQiF,KAAK,EAAC,WAAW;gBAAAT,QAAA,EAAC;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC9C5E,OAAA;gBAAQiF,KAAK,EAAC,UAAU;gBAAAT,QAAA,EAAC;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,eACN5E,OAAA;YAAKuE,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3BxE,OAAA;cAAAwE,QAAA,EAAO;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACvB5E,OAAA;cAAQiF,KAAK,EAAEnE,QAAS;cAACoE,QAAQ,EAAGxD,CAAC,IAAKX,WAAW,CAACW,CAAC,CAACyD,MAAM,CAACF,KAAK,CAAE;cAAAT,QAAA,gBACpExE,OAAA;gBAAQiF,KAAK,EAAC,IAAI;gBAAAT,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnC5E,OAAA;gBAAQiF,KAAK,EAAC,IAAI;gBAAAT,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACnC5E,OAAA;gBAAQiF,KAAK,EAAC,IAAI;gBAAAT,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC5E,OAAA;gBAAQiF,KAAK,EAAC,IAAI;gBAAAT,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAClC5E,OAAA;gBAAQiF,KAAK,EAAC,IAAI;gBAAAT,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN5E,OAAA;YAAKuE,SAAS,EAAC,2BAA2B;YAAAC,QAAA,gBACxCxE,OAAA;cAAAwE,QAAA,EAAO;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACnB5E,OAAA;cACEY,IAAI,EAAC,MAAM;cACXqE,KAAK,EAAEjE,IAAK;cACZkE,QAAQ,EAAGxD,CAAC,IAAKT,OAAO,CAACS,CAAC,CAACyD,MAAM,CAACF,KAAK;YAAE;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,EACH1D,MAAM,CAACW,GAAG,CAACC,KAAK,iBACf9B,OAAA,CAACL,eAAe;UAEdmC,KAAK,EAAEA,KAAM;UACbmC,WAAW,EAAEA,WAAY;UACzBJ,WAAW,EAAEA;QAAY,GAHpB/B,KAAK,CAAC4B,EAAE;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACP5E,OAAA;QAAKuE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,eACtCxE,OAAA;UAAKuE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BxE,OAAA;YAAQQ,KAAK,EAAC,gBAAgB;YAACI,IAAI,EAAC,QAAQ;YAACiE,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,MAAM,CAAE;YAAAgB,QAAA,GAAC,IAAE,eAAAxE,OAAA;cAAMqF,KAAK,EAAC,2BAA2B;cAAAb,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnJ5E,OAAA;YAAQQ,KAAK,EAAC,2BAA2B;YAACI,IAAI,EAAC,QAAQ;YAACiE,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,UAAU,CAAE;YAAAgB,QAAA,GAAC,IAAE,eAAAxE,OAAA;cAAMqF,KAAK,EAAC,2BAA2B;cAAAb,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxK5E,OAAA;YAAQQ,KAAK,EAAC,yBAAyB;YAACI,IAAI,EAAC,QAAQ;YAACiE,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,QAAQ,CAAE;YAAAgB,QAAA,GAAC,IAAE,eAAAxE,OAAA;cAAMqF,KAAK,EAAC,2BAA2B;cAAAb,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,KAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxK5E,OAAA;YAAQQ,KAAK,EAAC,0BAA0B;YAACI,IAAI,EAAC,QAAQ;YAACiE,OAAO,EAAEA,CAAA,KAAMrB,QAAQ,CAAC,OAAO,CAAE;YAAAgB,QAAA,eAACxE,OAAA;cAAMqF,KAAK,EAAC,gBAAgB;cAAAb,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/I;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAAArE,EAAA,CA9LKD,aAAa;EAAA,QAWAV,WAAW;AAAA;AAAA0F,EAAA,GAXxBhF,aAAa;AAiMnB,MAAMiF,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAM;IAAE9B;EAAG,CAAC,GAAG7D,SAAS,CAAC,CAAC;EAC1B,MAAM2B,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC6F,cAAc,EAAEC,iBAAiB,CAAC,GAAGpG,QAAQ,CAAC;IACnDkB,KAAK,EAAE,EAAE;IACTkC,IAAI,EAAE,EAAE;IACR9B,IAAI,EAAE,EAAE;IACRE,QAAQ,EAAE,EAAE;IACZ8B,SAAS,EAAE,EAAE;IACb1B,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAMyE,wBAAwB,GAAIC,IAAI,IAAK;IACzC,MAAMC,cAAc,GAAGD,IAAI,CAAC1E,MAAM,GAAG0E,IAAI,CAAC1E,MAAM,CAACW,GAAG,CAACC,KAAK,IAAI;MAC5D,IAAIA,KAAK,CAAClB,IAAI,KAAK,MAAM,EAAE;QACzB,MAAMkF,YAAY,GAAGrG,YAAY,CAACsG,cAAc,CAACjE,KAAK,CAACC,QAAQ,CAAC;QAChE,OAAO;UACL,GAAGD,KAAK;UACRG,OAAO,EAAEzC,WAAW,CAACwG,iBAAiB,CAACF,YAAY;QACrD,CAAC;MACH;MACA,OAAOhE,KAAK;IACd,CAAC,CAAC,GAAG,EAAE;IAEP4D,iBAAiB,CAAC;MAChB,GAAGE,IAAI;MACP1E,MAAM,EAAE2E;IACV,CAAC,CAAC;EACJ,CAAC;EAEDtG,SAAS,CAAC,MAAM;IACd,MAAM0G,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMlD,QAAQ,GAAG,MAAMrD,GAAG,CAACwG,GAAG,CAAE,eAAcxC,EAAG,GAAE,CAAC;QACpDiC,wBAAwB,CAAC5C,QAAQ,CAAC6C,IAAI,CAAC;MACzC,CAAC,CAAC,OAAOvC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD7B,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC;;IAEDyE,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACvC,EAAE,EAAElC,QAAQ,CAAC,CAAC;EAElB,oBACExB,OAAA;IAAKuE,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BxE,OAAA;MAAAwE,QAAA,gBACExE,OAAA;QAAAwE,QAAA,EAAKiB,cAAc,CAACjF;MAAK;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/B5E,OAAA;QAAKmG,GAAG,EAAEV,cAAc,CAAC7C,SAAU;QAACwD,GAAG,EAAC,YAAY;QAAC7B,SAAS,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC,eACT5E,OAAA;MAAKuE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACnCxE,OAAA;QAAKuE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBACjCxE,OAAA;UAAAwE,QAAA,gBAAGxE,OAAA;YAAAwE,QAAA,EAAQ;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACa,cAAc,CAAC/C,IAAI;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1D5E,OAAA;UAAAwE,QAAA,gBAAGxE,OAAA;YAAAwE,QAAA,EAAQ;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAACa,cAAc,CAACY,WAAW;QAAA;UAAA5B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D5E,OAAA;UAAAwE,QAAA,gBAAGxE,OAAA;YAAAwE,QAAA,EAAQ;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACa,cAAc,CAAC9C,eAAe;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/D5E,OAAA;UAAAwE,QAAA,gBAAGxE,OAAA;YAAAwE,QAAA,EAAQ;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACa,cAAc,CAAC3E,QAAQ;QAAA;UAAA2D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5D5E,OAAA;UAAKuE,SAAS,EAAC,mBAAmB;UAAAC,QAAA,EAC/BiB,cAAc,CAACvE,MAAM,CAACyC,MAAM,GAAG,CAAC,IAC/B8B,cAAc,CAACvE,MAAM,CAACW,GAAG,CAAC,CAACC,KAAK,EAAEwE,KAAK,kBACrCtG,OAAA,CAACL,eAAe;YAAamC,KAAK,EAAEA,KAAM;YAACyE,QAAQ,EAAE;UAAK,GAApCD,KAAK;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CAC7D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAED,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACY,GAAA,CAnEID,cAAc;EAAA,QACH1F,SAAS,EACPD,WAAW;AAAA;AAAA4G,GAAA,GAFxBjB,cAAc;AAsEpB,SAAQjF,aAAa,EAAEiF,cAAc;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}