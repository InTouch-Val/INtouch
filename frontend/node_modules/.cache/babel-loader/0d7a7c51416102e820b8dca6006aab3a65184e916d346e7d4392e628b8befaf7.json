{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\service\\\\forms\\\\set-new-user-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport API from '../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewUserPassword = ({\n  accessToken\n}) => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const validatePassword = () => {\n    setError(\"\");\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long.');\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (validatePassword()) {\n      try {\n        const response = await API.post('password/reset/complete/', {\n          new_password: password,\n          confirm_new_password: confirmPassword\n        }, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        if (response.status === 200) {\n          setError('Password set successfully!');\n          setTimeout(() => {\n            navigate('/login');\n          }, 1500);\n        }\n      } catch (error) {\n        var _error$data, _error$data2;\n        console.error('Error resetting password:', error === null || error === void 0 ? void 0 : (_error$data = error.data) === null || _error$data === void 0 ? void 0 : _error$data.detail);\n        setError('Error resetting password:', error === null || error === void 0 ? void 0 : (_error$data2 = error.data) === null || _error$data2 === void 0 ? void 0 : _error$data2.detail);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registration-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Your New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"action-button\",\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNewUserPassword, \"BtcnUkwDaEnEdzBWucPb2hYSHPU=\", false, function () {\n  return [useNavigate];\n});\n_c = SetNewUserPassword;\nexport default SetNewUserPassword;\nvar _c;\n$RefreshReg$(_c, \"SetNewUserPassword\");","map":{"version":3,"names":["React","useState","useNavigate","API","jsxDEV","_jsxDEV","SetNewUserPassword","accessToken","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","validatePassword","length","handleSubmit","e","preventDefault","response","post","new_password","confirm_new_password","headers","Authorization","status","setTimeout","_error$data","_error$data2","console","data","detail","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/service/forms/set-new-user-password.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport API from '../axios';\r\n\r\nconst SetNewUserPassword = ({ accessToken }) => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const validatePassword = () => {\r\n    setError(\"\")\r\n    if (password.length < 8) {\r\n      setError('Password must be at least 8 characters long.');\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return false;\r\n    }\r\n    setError('');\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (validatePassword()) {\r\n      try {\r\n        const response = await API.post('password/reset/complete/', {\r\n          new_password: password,\r\n          confirm_new_password: confirmPassword\r\n        }, {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`\r\n          }\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          setError('Password set successfully!');\r\n          setTimeout(() => {\r\n            navigate('/login')\r\n          }, 1500)\r\n        }\r\n      } catch (error) {\r\n        console.error('Error resetting password:', error?.data?.detail);\r\n        setError('Error resetting password:', error?.data?.detail);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"welcome-container\">\r\n      <form className='registration-form' onSubmit={handleSubmit}>\r\n        <h2>Set Your New Password</h2>\r\n        \r\n        <div>\r\n          <label>Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label>Confirm Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        {error && <p className=\"success-message\">{error}</p>}\r\n        \r\n        <button type=\"submit\" className='action-button'>Set Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetNewUserPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}