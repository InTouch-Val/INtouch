{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\components\\\\AddAssignment.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\nimport API from '../service/axios';\nimport AssignmentBlock from '../service/assignment-blocks';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport \"../css/assignments.css\";\nimport ImageSelector from '../service/image-selector';\nimport { useAuth } from '../service/authContext';\nimport Modal from '../service/modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faComment, faSquareCheck, faCircleDot, faEllipsis } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst getObjectFromEditorState = editorState => {\n  return JSON.stringify(editorState);\n};\nconst AddAssignment = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [type, setType] = useState('lesson');\n  const [language, setLanguage] = useState('en');\n  const [tags, setTags] = useState('');\n  const [blocks, setBlocks] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(false);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const isEditMode = id != null;\n  useEffect(() => {\n    if (isEditMode) {\n      fetchAssignment();\n    }\n  }, [id]);\n  const fetchAssignment = async () => {\n    try {\n      const response = await API.get(`assignments/${id}/`);\n      setTitle(response.data.title);\n      setDescription(response.data.text);\n      setType(response.data.assignment_type);\n      setLanguage(response.data.language);\n      setSelectedImage({\n        urls: {\n          full: response.data.image_url\n        }\n      }); // Assuming your ImageSelector expects an object like this\n\n      const fetchedBlocks = response.data.blocks.map(block => {\n        if (block.type === 'text') {\n          let contentState;\n          try {\n            const rawContent = JSON.parse(block.description);\n            console.log(rawContent);\n            contentState = conver(rawContent);\n          } catch (e) {\n            console.error('Ошибка при обработке содержимого:', e);\n            contentState = ContentState.createFromText(''); // Создаем пустое содержимое в случае ошибки\n          }\n\n          return {\n            ...block,\n            title: block.question,\n            content: EditorState.createWithContent(contentState)\n          };\n        } else if (block.type === 'single' || block.type === 'multiple') {\n          return {\n            ...block,\n            title: block.question,\n            choices: block.choice_replies.map(choice => choice.reply)\n          };\n        } else if (block.type === 'range') {\n          return {\n            ...block,\n            title: block.question,\n            minValue: block.start_range,\n            maxValue: block.end_range\n          };\n        }\n        return block;\n      });\n      setBlocks(fetchedBlocks);\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const blockInfo = blocks.map(block => {\n      if (block.type === \"text\") {\n        return {\n          type: block.type,\n          question: block.title,\n          description: getObjectFromEditorState(block.content),\n          choice_replies: []\n        };\n      } else if (block.type === \"range\") {\n        return {\n          type: block.type,\n          question: block.title,\n          start_range: block.minValue,\n          end_range: block.maxValue,\n          left_pole: block.leftPole || \"Left Pole\",\n          right_pole: block.rightPole || \"Right Pole\"\n        };\n      } else {\n        return {\n          type: block.type,\n          question: block.title,\n          choice_replies: block.choices.map(choice => ({\n            reply: choice\n          }))\n        };\n      }\n    });\n    const requestData = {\n      blocks: blockInfo,\n      title: title,\n      text: description,\n      assignment_type: type,\n      tags: \"ffasd\",\n      language: language,\n      image_url: (selectedImage === null || selectedImage === void 0 ? void 0 : selectedImage.urls.full) || \"https://images.unsplash.com/photo-1641531316051-30d6824c6460?crop=entropy&cs=srgb&fm=jpg&ixid=M3w1MzE0ODh8MHwxfHNlYXJjaHwxfHxsZW9uaWR8ZW58MHx8fHwxNzAwODE4Nzc5fDA&ixlib=rb-4.0.3&q=85\"\n    };\n    try {\n      let response;\n      if (isEditMode) {\n        response = await API.put(`assignments/${id}/`, requestData);\n      } else {\n        response = await API.post('assignments/', requestData);\n      }\n      if ([200, 201].includes(response.status)) {\n        setSuccessMessage(true);\n        setTimeout(() => {\n          navigate('/assignments');\n        }, 2000);\n      }\n    } catch (error) {\n      console.error(\"Error creating assignment \", error);\n    }\n  };\n  const handleImageSelect = image => {\n    setSelectedImage(image);\n  };\n  const addBlock = type => {\n    const newBlock = {\n      id: blocks.length + 1,\n      type: type,\n      title: '',\n      content: type === 'text' ? EditorState.createEmpty() : '',\n      choices: type === 'text' ? [] : [''],\n      minValue: type == 'range' ? 1 : null,\n      maxValue: type == 'range' ? 10 : null\n    };\n    setBlocks([...blocks, newBlock]);\n  };\n  const removeBlock = blockId => {\n    const updatedBlocks = blocks.filter(block => block.id !== blockId);\n    setBlocks(updatedBlocks);\n  };\n  const updateBlock = (blockId, newContent, newChoices, newTitle, newMinValue, newMaxValue, newLeftPole, newRightPole) => {\n    const updatedBlocks = blocks.map(block => {\n      if (block.id === blockId) {\n        return {\n          ...block,\n          content: newContent || block.content,\n          choices: newChoices || block.choices,\n          title: newTitle || block.title,\n          minValue: typeof newMinValue !== 'undefined' ? newMinValue : block.minValue,\n          maxValue: typeof newMaxValue !== 'undefined' ? newMaxValue : block.maxValue,\n          leftPole: typeof newLeftPole !== 'undefined' ? newLeftPole : block.leftPole,\n          rightPole: typeof newRightPole !== 'undefined' ? newRightPole : block.rightPole\n        };\n      }\n      return block;\n    });\n    setBlocks(updatedBlocks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: \"Assignment created succesfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), blocks.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"action-button\",\n        onClick: handleSubmit,\n        children: \"Save Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-assignment-body\",\n      children: [/*#__PURE__*/_jsxDEV(ImageSelector, {\n        onImageSelect: handleImageSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form-creator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"title-input\",\n            placeholder: \"Name of form\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"title-input\",\n            placeholder: \"Give a brief description...\",\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-settings\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: type,\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"lesson\",\n                children: \"Lesson\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"exercise\",\n                children: \"Exercise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"essay\",\n                children: \"Essay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"study\",\n                children: \"Study\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"quiz\",\n                children: \"Quiz\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"methology\",\n                children: \"Methodology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"metaphor\",\n                children: \"Metaphor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"en\",\n                children: \"English\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"es\",\n                children: \"Spanish\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"fr\",\n                children: \"French\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ge\",\n                children: \"German\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"it\",\n                children: \"Italian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-setting tags-setting\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: tags,\n              onChange: e => setTags(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), blocks.map(block => /*#__PURE__*/_jsxDEV(AssignmentBlock, {\n          block: block,\n          updateBlock: updateBlock,\n          removeBlock: removeBlock\n        }, block.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block-buttons-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"block-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Text Block\",\n            onClick: () => addBlock('text'),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 77\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Multiple Choice Block\",\n            onClick: () => addBlock('multiple'),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSquareCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 92\n            }, this), \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Single Choice Block\",\n            onClick: () => addBlock('single'),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCircleDot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 88\n            }, this), \"    \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            title: \"Add Range Question Block\",\n            onClick: () => addBlock('range'),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEllipsis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAssignment, \"P5XQlDgW1oi/M1yMRbbO4HgKFZ8=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = AddAssignment;\nconst ViewAssignment = () => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  const {\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [showModal, setShowModal] = useState();\n  const [assignmentData, setAssignmentData] = useState({\n    title: '',\n    text: '',\n    type: '',\n    language: '',\n    image_url: '',\n    author: '',\n    blocks: []\n  });\n  function decodeStyledText(jsonData) {\n    // Parse the JSON data\n    let data = JSON.parse(jsonData);\n\n    // Initialize an empty string to hold the HTML\n    let html = '';\n\n    // Function to apply styles\n    const applyStyles = (char, styles) => {\n      if (styles.includes('BOLD')) {\n        char = `<b>${char}</b>`;\n      }\n      if (styles.includes('ITALIC')) {\n        char = `<em>${char}</em>`;\n      }\n      if (styles.includes('UNDERLINE')) {\n        char = `<u>${char}</u>`;\n      }\n      return char;\n    };\n\n    // Traverse each block in the blockMap\n    for (let blockKey in data._immutable.currentContent.blockMap) {\n      let block = data._immutable.currentContent.blockMap[blockKey];\n\n      // Determine the block type\n      let blockType = block.type;\n      let openTag = '',\n        closeTag = '';\n      switch (blockType) {\n        case 'unstyled':\n          openTag = '<p>';\n          closeTag = '</p>';\n          break;\n        case 'header-one':\n          openTag = '<h1>';\n          closeTag = '</h1>';\n          break;\n        case 'header-two':\n          openTag = '<h2>';\n          closeTag = '</h2>';\n          break;\n        case 'header-three':\n          openTag = '<h3>';\n          closeTag = '</h3>';\n          break;\n        case 'unordered-list-item':\n          openTag = '<li>';\n          closeTag = '</li>';\n          break;\n        case 'ordered-list-item':\n          openTag = '<li>';\n          closeTag = '</li>';\n          break;\n      }\n\n      // Start the block\n      html += openTag;\n\n      // Process each character in the block\n      for (let i = 0; i < block.text.length; i++) {\n        let char = block.text[i];\n        let style = block.characterList[i].style;\n\n        // Apply styles\n        char = applyStyles(char, style);\n\n        // Add the character to the HTML string\n        html += char;\n      }\n\n      // Close the block\n      html += closeTag;\n    }\n    console.log(html);\n    return html;\n  }\n  const setAssignmentCredentials = data => {\n    const restoredBlocks = data.blocks ? data.blocks.map(block => {\n      if (block.type === 'text') {\n        // Используем функцию парсинга для получения HTML-текста из JSON Draft.js\n        const parsedContent = decodeStyledText(block.description);\n        return {\n          ...block,\n          description: parsedContent\n        };\n      }\n      return block;\n    }) : [];\n    setAssignmentData({\n      ...data,\n      blocks: restoredBlocks\n    });\n  };\n  const handleToggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const handleDeleteAssignment = async () => {\n    try {\n      const response = API.delete(`assignments/${id}/`);\n      navigate('/assignments');\n    } catch (e) {\n      console.error(e.message);\n    }\n  };\n  useEffect(() => {\n    const fetchAssignmentData = async () => {\n      try {\n        const response = await API.get(`assignments/${id}/`);\n        setAssignmentCredentials(response.data);\n      } catch (error) {\n        console.error(\"Error fetching assignment data\", error);\n        navigate('/assignments'); // Redirect if error\n      }\n    };\n\n    fetchAssignmentData();\n  }, [id, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: assignmentData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), currentUser.id === assignmentData.author && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleToggleModal,\n          children: \"Delete Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: () => navigate(`/edit-assignment/${id}`),\n          children: \"Edit Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assignment-view-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assignment-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 14\n          }, this), \" \", assignmentData.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 14\n          }, this), assignmentData.author_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 14\n          }, this), \" \", assignmentData.assignment_type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Language: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 14\n          }, this), \" \", assignmentData.language]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assignment-blocks\",\n          children: assignmentData.blocks.length > 0 && assignmentData.blocks.map((block, index) => /*#__PURE__*/_jsxDEV(AssignmentBlock, {\n            block: block,\n            readOnly: true\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: showModal,\n      onClose: handleToggleModal,\n      onConfirm: handleDeleteAssignment,\n      confirmText: \"Delete forever\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Are you sure you want to delete this assignment? \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"This action is irrevertable!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n_s2(ViewAssignment, \"UVjxqtqeg5XJSmEtK/gq55g++tI=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c2 = ViewAssignment;\nexport { AddAssignment, ViewAssignment };\nvar _c, _c2;\n$RefreshReg$(_c, \"AddAssignment\");\n$RefreshReg$(_c2, \"ViewAssignment\");","map":{"version":3,"names":["React","useState","useEffect","EditorState","ContentState","convertFromHTML","API","AssignmentBlock","useNavigate","useParams","ImageSelector","useAuth","Modal","FontAwesomeIcon","faComment","faSquareCheck","faCircleDot","faEllipsis","jsxDEV","_jsxDEV","Fragment","_Fragment","getObjectFromEditorState","editorState","JSON","stringify","AddAssignment","_s","title","setTitle","description","setDescription","type","setType","language","setLanguage","tags","setTags","blocks","setBlocks","selectedImage","setSelectedImage","successMessage","setSuccessMessage","navigate","id","isEditMode","fetchAssignment","response","get","data","text","assignment_type","urls","full","image_url","fetchedBlocks","map","block","contentState","rawContent","parse","console","log","conver","e","error","createFromText","question","content","createWithContent","choices","choice_replies","choice","reply","minValue","start_range","maxValue","end_range","message","handleSubmit","preventDefault","blockInfo","left_pole","leftPole","right_pole","rightPole","requestData","put","post","includes","status","setTimeout","handleImageSelect","image","addBlock","newBlock","length","createEmpty","removeBlock","blockId","updatedBlocks","filter","updateBlock","newContent","newChoices","newTitle","newMinValue","newMaxValue","newLeftPole","newRightPole","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onImageSelect","onSubmit","placeholder","value","onChange","target","required","icon","_c","ViewAssignment","_s2","currentUser","showModal","setShowModal","assignmentData","setAssignmentData","author","decodeStyledText","jsonData","html","applyStyles","char","styles","blockKey","_immutable","currentContent","blockMap","blockType","openTag","closeTag","i","style","characterList","setAssignmentCredentials","restoredBlocks","parsedContent","handleToggleModal","handleDeleteAssignment","delete","fetchAssignmentData","author_name","index","readOnly","isOpen","onClose","onConfirm","confirmText","_c2","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/components/AddAssignment.jsx"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { EditorState, ContentState, convertFromHTML } from 'draft-js';\r\nimport API from '../service/axios';\r\nimport AssignmentBlock from '../service/assignment-blocks';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport \"../css/assignments.css\"\r\nimport ImageSelector from '../service/image-selector';\r\nimport { useAuth } from '../service/authContext';\r\nimport Modal from '../service/modal';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faComment, faSquareCheck, faCircleDot, faEllipsis } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst getObjectFromEditorState = (editorState) => {\r\n  return JSON.stringify(editorState)\r\n};\r\n\r\n\r\nconst AddAssignment = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [type, setType] = useState('lesson');\r\n  const [language, setLanguage] = useState('en');\r\n  const [tags, setTags] = useState('');\r\n\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [selectedImage, setSelectedImage] = useState(null)\r\n  const [successMessage, setSuccessMessage] = useState(false)\r\n\r\n  const navigate = useNavigate()\r\n  const {id} = useParams()\r\n  const isEditMode = id != null\r\n\r\n  useEffect(() => {\r\n    if(isEditMode){\r\n      fetchAssignment()\r\n    }\r\n  }, [id])\r\n\r\n  const fetchAssignment = async () => {\r\n    try {\r\n      const response = await API.get(`assignments/${id}/`);\r\n      setTitle(response.data.title);\r\n      setDescription(response.data.text);\r\n      setType(response.data.assignment_type);\r\n      setLanguage(response.data.language);\r\n      setSelectedImage({ urls: { full: response.data.image_url } }); // Assuming your ImageSelector expects an object like this\r\n  \r\n      const fetchedBlocks = response.data.blocks.map(block => {\r\n        if (block.type === 'text') {\r\n          let contentState;\r\n        try {\r\n        const rawContent = JSON.parse(block.description);\r\n        console.log(rawContent)\r\n        contentState = conver(rawContent);\r\n        } catch (e) {\r\n        console.error('Ошибка при обработке содержимого:', e);\r\n        contentState = ContentState.createFromText(''); // Создаем пустое содержимое в случае ошибки\r\n        }\r\n\r\n          return {\r\n            ...block,\r\n            title: block.question,\r\n            content: EditorState.createWithContent(contentState),\r\n          };\r\n        } else if (block.type === 'single' || block.type === 'multiple') {\r\n          return {\r\n            ...block,\r\n            title: block.question,\r\n            choices: block.choice_replies.map(choice => choice.reply)\r\n          };\r\n        } else if (block.type === 'range') {\r\n          return {\r\n            ...block,\r\n            title: block.question,\r\n            minValue: block.start_range,\r\n            maxValue: block.end_range\r\n          };\r\n        }\r\n        return block;\r\n      });\r\n  \r\n      setBlocks(fetchedBlocks);\r\n    } catch (e) {\r\n      console.error(e.message);\r\n    }\r\n  };\r\n\r\nconst handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n\r\n  const blockInfo = blocks.map(block => {\r\n    if (block.type === \"text\") {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        description: getObjectFromEditorState(block.content),\r\n        choice_replies: []\r\n      };\r\n    } else if (block.type === \"range\") {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        start_range: block.minValue,\r\n        end_range: block.maxValue,\r\n        left_pole: block.leftPole || \"Left Pole\",\r\n        right_pole: block.rightPole || \"Right Pole\"\r\n      };\r\n    } else {\r\n      return {\r\n        type: block.type,\r\n        question: block.title,\r\n        choice_replies: block.choices.map(choice => ({ reply: choice }))\r\n      };\r\n    }\r\n  });\r\n\r\n\r\n  const requestData = {\r\n    blocks: blockInfo,\r\n    title: title,\r\n    text: description,\r\n    assignment_type: type,\r\n    tags: \"ffasd\",\r\n    language: language,\r\n    image_url: selectedImage?.urls.full || \"https://images.unsplash.com/photo-1641531316051-30d6824c6460?crop=entropy&cs=srgb&fm=jpg&ixid=M3w1MzE0ODh8MHwxfHNlYXJjaHwxfHxsZW9uaWR8ZW58MHx8fHwxNzAwODE4Nzc5fDA&ixlib=rb-4.0.3&q=85\"\r\n  };\r\n\r\n  try {\r\n    let response;\r\n    if (isEditMode) {\r\n      response = await API.put(`assignments/${id}/`, requestData);\r\n    } else {\r\n      response = await API.post('assignments/', requestData);\r\n    }\r\n\r\n    if ([200, 201].includes(response.status)) {\r\n      setSuccessMessage(true);\r\n      setTimeout(() => {\r\n        navigate('/assignments');\r\n      }, 2000);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error creating assignment \", error);\r\n  }\r\n};\r\n\r\n  const handleImageSelect = (image) => {\r\n    setSelectedImage(image);\r\n  }\r\n\r\n  const addBlock = (type) => {\r\n    const newBlock = {\r\n      id: blocks.length + 1,\r\n      type: type,\r\n      title: '', \r\n      content: type === 'text' ? EditorState.createEmpty() : '',\r\n      choices: type === 'text' ? [] : [''],\r\n      minValue: type == 'range' ? 1 : null,\r\n      maxValue: type == 'range' ? 10 : null,\r\n    };\r\n    setBlocks([...blocks, newBlock]);\r\n  };\r\n\r\n  const removeBlock = (blockId) => {\r\n    const updatedBlocks = blocks.filter(block => block.id !== blockId);\r\n    setBlocks(updatedBlocks);\r\n  };\r\n\r\n  const updateBlock = (blockId, newContent, newChoices, newTitle, newMinValue, newMaxValue, newLeftPole, newRightPole) => {\r\n    const updatedBlocks = blocks.map((block) => {\r\n      if (block.id === blockId) {\r\n        return {\r\n          ...block,\r\n          content: newContent || block.content,\r\n          choices: newChoices || block.choices,\r\n          title: newTitle || block.title,\r\n          minValue: typeof newMinValue !== 'undefined' ? newMinValue : block.minValue,\r\n          maxValue: typeof newMaxValue !== 'undefined' ? newMaxValue : block.maxValue,\r\n          leftPole: typeof newLeftPole !== 'undefined' ? newLeftPole : block.leftPole,\r\n          rightPole: typeof newRightPole !== 'undefined' ? newRightPole : block.rightPole\r\n        };\r\n      }\r\n      return block;\r\n    });\r\n    setBlocks(updatedBlocks);\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div className='assignments-page'>\r\n      {successMessage && <div className='success-message'>Assignment created succesfully</div>}\r\n      <header>\r\n        <h1>Add Assignment</h1>\r\n        {blocks.length > 0 ? <button className='action-button' onClick={handleSubmit}>Save Assignment</button> : <></>}\r\n      </header>\r\n      <div className='add-assignment-body'>\r\n        <ImageSelector onImageSelect={handleImageSelect}/>\r\n        <form onSubmit={handleSubmit} className=\"form-creator\">\r\n          <div className='form-title'>\r\n            <input\r\n              type='text'\r\n              className=\"title-input\" \r\n              placeholder='Name of form'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type='text'\r\n              className=\"title-input\" \r\n              placeholder=\"Give a brief description...\"\r\n              value={description}\r\n              onChange={(e) => setDescription(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className='form-settings'>\r\n              <div className=\"form-setting\">\r\n                <label>Type</label>\r\n                <select value={type} onChange={(e) => setType(e.target.value)}>\r\n                  <option value=\"lesson\">Lesson</option>\r\n                  <option value=\"exercise\">Exercise</option>\r\n                  <option value=\"essay\">Essay</option>\r\n                  <option value=\"study\">Study</option>\r\n                  <option value=\"quiz\">Quiz</option>\r\n                  <option value=\"methology\">Methodology</option>\r\n                  <option value=\"metaphor\">Metaphor</option>\r\n                </select>\r\n          </div>\r\n          <div className=\"form-setting\">\r\n            <label>Language</label>\r\n            <select value={language} onChange={(e) => setLanguage(e.target.value)}>\r\n              <option value=\"en\">English</option>\r\n              <option value=\"es\">Spanish</option>\r\n              <option value=\"fr\">French</option>\r\n              <option value=\"ge\">German</option>\r\n              <option value=\"it\">Italian</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-setting tags-setting\">\r\n            <label>Tags</label>\r\n            <input\r\n              type=\"text\"\r\n              value={tags}\r\n              onChange={(e) => setTags(e.target.value)}\r\n            />\r\n          </div>\r\n        </div> \r\n          {blocks.map(block => (\r\n            <AssignmentBlock\r\n              key={block.id}\r\n              block={block}\r\n              updateBlock={updateBlock}\r\n              removeBlock={removeBlock}\r\n            />\r\n          ))}\r\n        </form>\r\n        <div className='block-buttons-container'>\r\n          <div className='block-buttons'>\r\n            <button title=\"Add Text Block\" onClick={() => addBlock('text')}><FontAwesomeIcon icon={faComment} />  </button>\r\n            <button title=\"Add Multiple Choice Block\" onClick={() => addBlock('multiple')}><FontAwesomeIcon icon={faSquareCheck} />  </button>\r\n            <button title=\"Add Single Choice Block\" onClick={() => addBlock('single')}><FontAwesomeIcon icon={faCircleDot} />    </button>\r\n            <button title='Add Range Question Block' onClick={() => addBlock('range')}><FontAwesomeIcon icon={faEllipsis} /></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nconst ViewAssignment = () => {\r\n  const { id } = useParams();\r\n  const {currentUser} = useAuth()\r\n  const navigate = useNavigate();\r\n\r\n  const [showModal, setShowModal] = useState()\r\n  const [assignmentData, setAssignmentData] = useState({\r\n    title: '',\r\n    text: '',\r\n    type: '',\r\n    language: '',\r\n    image_url: '',\r\n    author: '',\r\n    blocks: []\r\n  });\r\n\r\n  function decodeStyledText(jsonData) {\r\n    // Parse the JSON data\r\n    let data = JSON.parse(jsonData);\r\n\r\n    // Initialize an empty string to hold the HTML\r\n    let html = '';\r\n\r\n    // Function to apply styles\r\n    const applyStyles = (char, styles) => {\r\n        if (styles.includes('BOLD')) {\r\n            char = `<b>${char}</b>`;\r\n        }\r\n        if (styles.includes('ITALIC')) {\r\n            char = `<em>${char}</em>`;\r\n        }\r\n        if (styles.includes('UNDERLINE')) {\r\n            char = `<u>${char}</u>`;\r\n        }\r\n        return char;\r\n    };\r\n\r\n    // Traverse each block in the blockMap\r\n    for (let blockKey in data._immutable.currentContent.blockMap) {\r\n        let block = data._immutable.currentContent.blockMap[blockKey];\r\n\r\n        // Determine the block type\r\n        let blockType = block.type;\r\n        let openTag = '', closeTag = '';\r\n        switch (blockType) {\r\n            case 'unstyled':\r\n                openTag = '<p>'; closeTag = '</p>';\r\n                break;\r\n            case 'header-one':\r\n                openTag = '<h1>'; closeTag = '</h1>';\r\n                break;\r\n            case 'header-two':\r\n                openTag = '<h2>'; closeTag = '</h2>';\r\n                break;\r\n            case 'header-three':\r\n                openTag = '<h3>'; closeTag = '</h3>';\r\n                break;\r\n            case 'unordered-list-item':\r\n                openTag = '<li>'; closeTag = '</li>';\r\n                break;\r\n            case 'ordered-list-item':\r\n                openTag = '<li>'; closeTag = '</li>';\r\n                break;\r\n            \r\n        }\r\n\r\n        // Start the block\r\n        html += openTag;\r\n\r\n        // Process each character in the block\r\n        for (let i = 0; i < block.text.length; i++) {\r\n            let char = block.text[i];\r\n            let style = block.characterList[i].style;\r\n\r\n            // Apply styles\r\n            char = applyStyles(char, style);\r\n\r\n            // Add the character to the HTML string\r\n            html += char;\r\n        }\r\n\r\n        // Close the block\r\n        html += closeTag;\r\n    }\r\n    console.log(html)\r\n    return html;\r\n}\r\n\r\n  const setAssignmentCredentials = (data) => {\r\n    const restoredBlocks = data.blocks ? data.blocks.map(block => {\r\n      if (block.type === 'text') {\r\n        // Используем функцию парсинга для получения HTML-текста из JSON Draft.js\r\n        const parsedContent = decodeStyledText(block.description);\r\n  \r\n        return {\r\n          ...block,\r\n          description: parsedContent,\r\n        };\r\n      }\r\n      return block;\r\n    }) : [];\r\n  \r\n    setAssignmentData({\r\n      ...data,\r\n      blocks: restoredBlocks\r\n    });\r\n  };\r\n\r\n  const handleToggleModal = () => {setShowModal(!showModal)}\r\n\r\n  const handleDeleteAssignment = async () => {\r\n    try{\r\n      const response = API.delete(`assignments/${id}/`)\r\n      navigate('/assignments')\r\n    }catch(e){\r\n      console.error(e.message)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchAssignmentData = async () => {\r\n      try {\r\n        const response = await API.get(`assignments/${id}/`);\r\n        setAssignmentCredentials(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching assignment data\", error);\r\n        navigate('/assignments'); // Redirect if error\r\n      }\r\n    };\r\n\r\n    fetchAssignmentData();\r\n  }, [id, navigate]);\r\n\r\n  return (\r\n    <div className='assignments-page'>\r\n      <header>\r\n        <h1>{assignmentData.title}</h1>\r\n          {currentUser.id === assignmentData.author && (\r\n            <div>\r\n              <button className='action-button' onClick={handleToggleModal}>Delete Assignment</button>\r\n              <button className='action-button' onClick={() => navigate(`/edit-assignment/${id}`)}>Edit Assignment</button>\r\n            </div>\r\n          )}\r\n      </header>\r\n      <div className='assignment-view-body'>\r\n        <div className='assignment-details'>\r\n          <p><strong>Description:</strong> {assignmentData.text}</p>\r\n          <p><strong>Author: </strong>{assignmentData.author_name}</p>\r\n          <p><strong>Type: </strong> {assignmentData.assignment_type}</p>\r\n          <p><strong>Language: </strong> {assignmentData.language}</p>\r\n          <div className='assignment-blocks'>\r\n            {assignmentData.blocks.length > 0 &&\r\n              assignmentData.blocks.map((block, index) => (\r\n                <AssignmentBlock key={index} block={block} readOnly={true} />\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        isOpen={showModal}\r\n        onClose={handleToggleModal}\r\n        onConfirm={handleDeleteAssignment}\r\n        confirmText=\"Delete forever\"\r\n      >\r\n        <p>Are you sure you want to delete this assignment? <strong>This action is irrevertable!</strong></p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport {AddAssignment, ViewAssignment}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}