{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\service\\\\set-new-user-password.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetNewUserPassword = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const validatePassword = () => {\n    if (password.length < 8) {\n      setError('Password must be at least 8 characters long.');\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setError('Passwords do not match.');\n      return false;\n    }\n    setError('');\n    return true;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validatePassword()) {\n      console.log('Password set successfully!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"set-password\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Set Your New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(SetNewUserPassword, \"phx6WSYjbA9zUgGhsNH3iJSvobs=\");\n_c = SetNewUserPassword;\nexport default SetNewUserPassword;\nvar _c;\n$RefreshReg$(_c, \"SetNewUserPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SetNewUserPassword","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","validatePassword","length","handleSubmit","e","preventDefault","console","log","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/service/set-new-user-password.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SetNewUserPassword = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const validatePassword = () => {\r\n    if (password.length < 8) {\r\n      setError('Password must be at least 8 characters long.');\r\n      return false;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      setError('Passwords do not match.');\r\n      return false;\r\n    }\r\n    setError('');\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validatePassword()) {\r\n\r\n      console.log('Password set successfully!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"set-password\">\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Set Your New Password</h2>\r\n        \r\n        <div>\r\n          <label>Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        <div>\r\n          <label>Confirm Password:</label>\r\n          <input \r\n            type=\"password\" \r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required \r\n          />\r\n        </div>\r\n        \r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <button type=\"submit\">Set Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetNewUserPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}