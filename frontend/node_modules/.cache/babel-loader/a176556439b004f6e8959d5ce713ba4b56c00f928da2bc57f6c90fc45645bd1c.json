{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\service\\\\image-selector.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport \"../css/image-selector.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageSelector = ({\n  onImageSelect\n}) => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedImageId, setSelectedImageId] = useState(null); // Состояние для хранения ID выбранного изображения\n  const accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\n  const searchImages = query => {\n    axios.get(`https://api.unsplash.com/search/photos?query=${query}&client_id=${accessKey}&per_page=6`).then(response => {\n      setImages(response.data.results);\n    }).catch(error => console.error('Error searching images:', error));\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    searchImages(searchTerm);\n  };\n  const handleImageClick = image => {\n    setSelectedImageId(image.id); // Обновляем ID выбранного изображения\n    onImageSelect(image); // Вызываем функцию onImageSelect с выбранным изображением\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Search for images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-results\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `image-item ${image.id === selectedImageId ? 'selected' : ''}`,\n        onClick: () => handleImageClick(image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.urls.small,\n          alt: image.alt_description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageSelector, \"JUvnQ8e62/tzZ8Or9+sos2KmmuY=\");\n_c = ImageSelector;\nexport default ImageSelector;\nvar _c;\n$RefreshReg$(_c, \"ImageSelector\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageSelector","onImageSelect","_s","images","setImages","searchTerm","setSearchTerm","selectedImageId","setSelectedImageId","accessKey","process","env","REACT_APP_UNSPLASH_ACCESS_KEY","searchImages","query","get","then","response","data","results","catch","error","console","handleSearch","e","preventDefault","handleImageClick","image","id","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","src","urls","small","alt","alt_description","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/service/image-selector.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"../css/image-selector.css\"\r\n\r\nconst ImageSelector = ({ onImageSelect }) => {\r\n  const [images, setImages] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedImageId, setSelectedImageId] = useState(null); // Состояние для хранения ID выбранного изображения\r\n  const accessKey = process.env.REACT_APP_UNSPLASH_ACCESS_KEY;\r\n\r\n  const searchImages = (query) => {\r\n    axios.get(`https://api.unsplash.com/search/photos?query=${query}&client_id=${accessKey}&per_page=6`)\r\n      .then(response => {\r\n        setImages(response.data.results);\r\n      })\r\n      .catch(error => console.error('Error searching images:', error));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    searchImages(searchTerm);\r\n  };\r\n\r\n  const handleImageClick = (image) => {\r\n    setSelectedImageId(image.id); // Обновляем ID выбранного изображения\r\n    onImageSelect(image); // Вызываем функцию onImageSelect с выбранным изображением\r\n  };\r\n\r\n  return (\r\n    <div className=\"image-selector\">\r\n      <form onSubmit={handleSearch}>\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Search for images\"\r\n        />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n      <div className=\"image-results\">\r\n        {images.map(image => (\r\n          <div \r\n            key={image.id} \r\n            className={`image-item ${image.id === selectedImageId ? 'selected' : ''}`} \r\n            onClick={() => handleImageClick(image)}\r\n          >\r\n            <img src={image.urls.small} alt={image.alt_description} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSelector;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}