{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\components\\\\AddAssignment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"../css/assignments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst blockTypes = {\n  TEXT: 'Text',\n  MULTIPLE_CHOICE: 'Multiple Choice',\n  SCALE: 'Scale',\n  IMAGE: 'Image',\n  VIDEO: 'Video'\n};\nconst AddAssignment = () => {\n  _s();\n  const [blocks, setBlocks] = useState([]);\n  const addBlock = type => {\n    const newBlock = {\n      type,\n      content: ''\n    };\n    setBlocks([...blocks, newBlock]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assignments-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-assignment-button\",\n        children: \"Save Assignment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-assignment-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title-input\",\n        type: \"text\",\n        placeholder: \"Assignment Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"assignment-text-input\",\n        placeholder: \"Write your assignment here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-blocks\",\n        children: blocks.map((block, index) => {\n          // Отображение блока в зависимости от типа\n          switch (block.type) {\n            case blockTypes.TEXT:\n              return /*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"assignment-text-input\",\n                placeholder: \"Text block\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 26\n              }, this);\n            case blockTypes.MULTIPLE_CHOICE:\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"/* \\u041A\\u043E\\u043C\\u043F\\u043E\\u043D\\u0435\\u043D\\u0442 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u0430 \\u0441 \\u0432\\u044B\\u0431\\u043E\\u0440\\u043E\\u043C \\u043E\\u0442\\u0432\\u0435\\u0442\\u043E\\u0432 */\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 26\n              }, this);\n            // Добавьте сюда другие типы блоков...\n            default:\n              return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-blocks-bar\",\n        children: Object.values(blockTypes).map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addBlock(type),\n          children: [\"Add \", type]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAssignment, \"rtaDpuSW4wfwHgu9JCoZLgb10N4=\");\n_c = AddAssignment;\nexport default AddAssignment;\nvar _c;\n$RefreshReg$(_c, \"AddAssignment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","blockTypes","TEXT","MULTIPLE_CHOICE","SCALE","IMAGE","VIDEO","AddAssignment","_s","blocks","setBlocks","addBlock","type","newBlock","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","map","block","index","Object","values","onClick","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/components/AddAssignment.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"../css/assignments.css\";\r\n\r\nconst blockTypes = {\r\n  TEXT: 'Text',\r\n  MULTIPLE_CHOICE: 'Multiple Choice',\r\n  SCALE: 'Scale',\r\n  IMAGE: 'Image',\r\n  VIDEO: 'Video',\r\n};\r\n\r\nconst AddAssignment = () => {\r\n  const [blocks, setBlocks] = useState([]);\r\n\r\n  const addBlock = (type) => {\r\n    const newBlock = { type, content: '' };\r\n    setBlocks([...blocks, newBlock]);\r\n  };\r\n\r\n  return (\r\n    <div className='assignments-page'>\r\n        <header>\r\n          <h1>Add Assignment</h1>\r\n          <button className='add-assignment-button'>Save Assignment</button>\r\n        </header>\r\n        <div className='add-assignment-body'>\r\n          <input className='title-input' type='text' placeholder='Assignment Title' />\r\n          {/* Остальные поля фильтров... */}\r\n          <textarea className='assignment-text-input' placeholder='Write your assignment here'></textarea>\r\n          {/* Блоки для добавления контента */}\r\n          <div className='content-blocks'>\r\n            {blocks.map((block, index) => {\r\n              // Отображение блока в зависимости от типа\r\n              switch (block.type) {\r\n                case blockTypes.TEXT:\r\n                  return <textarea key={index} className='assignment-text-input' placeholder='Text block'></textarea>;\r\n                case blockTypes.MULTIPLE_CHOICE:\r\n                  return <div key={index}>/* Компонент вопроса с выбором ответов */</div>;\r\n                // Добавьте сюда другие типы блоков...\r\n                default:\r\n                  return null;\r\n              }\r\n            })}\r\n          </div>\r\n          {/* Панель для добавления новых блоков */}\r\n          <div className='add-blocks-bar'>\r\n            {Object.values(blockTypes).map((type) => (\r\n              <button key={type} onClick={() => addBlock(type)}>\r\n                Add {type}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddAssignment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}