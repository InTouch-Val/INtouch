{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aksma\\\\Desktop\\\\inTech prototype\\\\intouch\\\\src\\\\service\\\\editors-toolbar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { EditorState } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport createToolbarPlugin from 'draft-js-static-toolbar-plugin';\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst toolbarPlugin = createToolbarPlugin();\nconst {\n  Toolbar\n} = toolbarPlugin;\nconst plugins = [toolbarPlugin];\nconst EditorToolbar = () => {\n  _s();\n  const [editorState, setEditorState] = useState(EditorState.createEmpty());\n  const handleEditorChange = state => {\n    setEditorState(state);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      editorState: editorState,\n      onChange: handleEditorChange,\n      plugins: plugins\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {\n      children:\n      // может быть изменено для добавления других кнопок\n      externalProps => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BoldButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ItalicButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(UnderlineButton, {\n          ...externalProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_s(EditorToolbar, \"wG9VLOnpYRUB9A7+mcW2q9Lv0c0=\");\n_c = EditorToolbar;\nexport default EditorToolbar;\nvar _c;\n$RefreshReg$(_c, \"EditorToolbar\");","map":{"version":3,"names":["React","useState","EditorState","Editor","createToolbarPlugin","jsxDEV","_jsxDEV","Fragment","_Fragment","toolbarPlugin","Toolbar","plugins","EditorToolbar","_s","editorState","setEditorState","createEmpty","handleEditorChange","state","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","externalProps","BoldButton","ItalicButton","UnderlineButton","_c","$RefreshReg$"],"sources":["C:/Users/aksma/Desktop/inTech prototype/intouch/src/service/editors-toolbar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { EditorState } from 'draft-js';\r\nimport Editor from 'draft-js-plugins-editor';\r\nimport createToolbarPlugin from 'draft-js-static-toolbar-plugin';\r\nimport 'draft-js-static-toolbar-plugin/lib/plugin.css';\r\n\r\nconst toolbarPlugin = createToolbarPlugin();\r\nconst { Toolbar } = toolbarPlugin;\r\nconst plugins = [toolbarPlugin];\r\n\r\nconst EditorToolbar = () => {\r\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\r\n\r\n    const handleEditorChange = (state) => {\r\n      setEditorState(state);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          onChange={handleEditorChange}\r\n          plugins={plugins}\r\n        />\r\n        <Toolbar>\r\n          {\r\n            // может быть изменено для добавления других кнопок\r\n            (externalProps) => (\r\n              <>\r\n                <BoldButton {...externalProps} />\r\n                <ItalicButton {...externalProps} />\r\n                <UnderlineButton {...externalProps} />\r\n                {/* Добавьте сюда другие кнопки форматирования */}\r\n              </>\r\n            )\r\n          }\r\n        </Toolbar>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default EditorToolbar"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAO,+CAA+C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,aAAa,GAAGL,mBAAmB,CAAC,CAAC;AAC3C,MAAM;EAAEM;AAAQ,CAAC,GAAGD,aAAa;AACjC,MAAME,OAAO,GAAG,CAACF,aAAa,CAAC;AAE/B,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAACC,WAAW,CAACc,WAAW,CAAC,CAAC,CAAC;EAEzE,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;IACpCH,cAAc,CAACG,KAAK,CAAC;EACvB,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA,CAACH,MAAM;MACLW,WAAW,EAAEA,WAAY;MACzBM,QAAQ,EAAEH,kBAAmB;MAC7BN,OAAO,EAAEA;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,eACFlB,OAAA,CAACI,OAAO;MAAAS,QAAA;MAEJ;MACCM,aAAa,iBACZnB,OAAA,CAAAE,SAAA;QAAAW,QAAA,gBACEb,OAAA,CAACoB,UAAU;UAAA,GAAKD;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjClB,OAAA,CAACqB,YAAY;UAAA,GAAKF;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACnClB,OAAA,CAACsB,eAAe;UAAA,GAAKH;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,eAEtC;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEZ,CAAC;AAAAX,EAAA,CA7BKD,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AA+BnB,eAAeA,aAAa;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}